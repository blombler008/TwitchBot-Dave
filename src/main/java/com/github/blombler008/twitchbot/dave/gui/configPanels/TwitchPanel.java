package com.github.blombler008.twitchbot.dave.gui.configPanels;

import com.github.blombler008.twitchbot.dave.gui.ConfigPanel;
import com.github.blombler008.twitchbot.dave.gui.GUI;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

public class TwitchPanel extends ConfigPanel {


    private JCheckBox extrernalOAuth;
    private JCheckBox systemTrayEnable;
    private JPanel root;
    private JCheckBox resizeable;
    private JTextField botNickField;
    private JLabel channelLabel;
    private JTextField channelField;
    private JCheckBox isLightTheme;
    private JLabel botNickLabel;
    private JLabel oAuthLabel;
    private JTextField oAuthField;
    private GUI gui;

    public TwitchPanel(GUI gui) {
        this.gui = gui;
        $$$setupUI$$$();
        botNickField.addKeyListener(applyOnEnter());
        channelField.addKeyListener(applyOnEnter());
        root.setLayout(new BoxLayout(root, BoxLayout.Y_AXIS));
        this.add(root);
    }

    private KeyListener applyOnEnter() {
        return new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    apply();
                }
            }
        };
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        root.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(5, 5));
        panel1.setMaximumSize(new Dimension(2147483647, 30));
        root.add(panel1);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        botNickLabel = new JLabel();
        botNickLabel.setEnabled(true);
        botNickLabel.setText("Nickname:");
        panel1.add(botNickLabel, BorderLayout.WEST);
        botNickField.setMinimumSize(new Dimension(80, 22));
        botNickField.setPreferredSize(new Dimension(80, 22));
        panel1.add(botNickField, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(5, 5));
        panel2.setMaximumSize(new Dimension(2147483647, 30));
        root.add(panel2);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        oAuthLabel = new JLabel();
        oAuthLabel.setText("OAuth:");
        panel2.add(oAuthLabel, BorderLayout.WEST);
        oAuthField.setMinimumSize(new Dimension(80, 22));
        oAuthField.setPreferredSize(new Dimension(80, 22));
        panel2.add(oAuthField, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(5, 5));
        panel3.setMaximumSize(new Dimension(2147483647, 30));
        root.add(panel3);
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        channelLabel = new JLabel();
        channelLabel.setText("Channel:");
        panel3.add(channelLabel, BorderLayout.WEST);
        channelField.setMinimumSize(new Dimension(80, 22));
        channelField.setPreferredSize(new Dimension(80, 22));
        panel3.add(channelField, BorderLayout.CENTER);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        panel4.setMaximumSize(new Dimension(32767, 30));
        root.add(panel4);
        panel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        extrernalOAuth.setSelected(true);
        extrernalOAuth.setText("Use External OAuth file");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel4.add(extrernalOAuth, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }


    private ImageIcon getScaledImage(Image srcImg, int w, int h) {
        BufferedImage resizedImg = new BufferedImage(w, h, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2 = resizedImg.createGraphics();

        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(srcImg, 0, 0, w, h, null);
        g2.dispose();

        return new ImageIcon(resizedImg);
    }

    private void createUIComponents() {
        root = new JPanel();
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        root.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        extrernalOAuth = new JCheckBox();
        extrernalOAuth.setSelected(gui.getTwitchConfig().isExternalOAuth());
        botNickField = new JTextField(gui.getTwitchConfig().getNickname());
        oAuthField = new JPasswordField(gui.getTwitchConfig().getPassword());
        channelField = new JTextField(gui.getTwitchConfig().getChannel());
    }

    @Override
    public void apply() {
    }

}
